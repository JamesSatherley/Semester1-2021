package nz.ac.massey.cs.pp.tutorial6.id19040618;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.List;

public class Object2HTMLConverter {
	void print(List data,Class type,File output) {
		String output_file = "<html>\r\n<body>\r\n<table border=\"1\">\r\n <tr>\r\n  <th>student_id</th>\r\n  <th>first name</th>\r\n  <th>name</th>\r\n  <th>program</th>\r\n  <th>major</th>\r\n </tr>";
		data.remove(0);
		
		while (data.isEmpty() == false) {
			Object current = data.get(0);
			Object firstName = null, surname = null, id = null, program = null, major = null;
			try {
				Method firstname_method = type.getMethod("getFirst_name");
				firstName = firstname_method.invoke(current);

				Method surname_method = type.getMethod("getSurname");
				surname = surname_method.invoke(current);

				Method id_method = type.getMethod("getId");
				id = id_method.invoke(current);

				Method program_method = type.getMethod("getProgram");
				program = program_method.invoke(current);

				Method major_method = type.getMethod("getMajor");
				major = major_method.invoke(current);
			} catch (NoSuchMethodException e) {
				System.out.println(e);
			} catch (IllegalAccessException e) {
				System.out.println(e);
			} catch (IllegalArgumentException e) {
				System.out.println(e);
			} catch (InvocationTargetException e) {
				System.out.println(e);
			}
			output_file += "\r\n\r\n <tr>\r\n  <td>" + id + "</td>\r\n  <td>" + firstName + "</td>\r\n  <td>" + surname + "</td>\r\n  <td>" + program + "</td>\r\n  <td>" + major + "</td>\r\n </tr>\r\n";
			data.remove(0);
		}
		output_file += "</table>\r\n</body>\r\n</html>";
		
		
		try {
			FileWriter typer = new FileWriter(output);
			typer.write(output_file);
			typer.close();
			
		} catch (IOException error) {
			System.out.println("Error in file outputing, here is error: " + error);
		}
	}
	String getData(Object o, String s, Class c) {
		String get = null;
		try {
			Method method = c.getMethod(s);
			get = method.invoke(o);
		} catch (NoSuchMethodException e) {
			System.out.println(e);
		} catch (IllegalAccessException e) {
			System.out.println(e);
		} catch (IllegalArgumentException e) {
			System.out.println(e);
		} catch (InvocationTargetException e) {
			System.out.println(e);
		}
		return get;
	}
}
